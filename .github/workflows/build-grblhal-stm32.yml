name: Build grblHAL (STM32F4) via PlatformIO

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      env:
        description: "PlatformIO env to build (leave empty to build all envs)"
        required: false
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache PlatformIO packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio
            ~/.cache/pip
          key: ${{ runner.os }}-platformio-${{ hashFiles('**/platformio.ini') }}

      - name: Install PlatformIO Core
        run: python -m pip install --upgrade platformio

      - name: Show PlatformIO version
        run: pio --version

      - name: Show platformio.ini envs (help to pick env name)
        run: |
          echo "=== platformio.ini env sections ==="
          python -c "import configparser,sys;cfg=configparser.ConfigParser();cfg.read('platformio.ini');envs=[s for s in cfg.sections() if s.startswith('env:')];print('\\n'.join(envs) if envs else 'No env:* sections found in platformio.ini')"

      # Optional: copy your custom driver file into repo before build
      # Uncomment / adapt paths if you want Actions to copy a local file into driver folder.
      #- name: Copy custom driver (optional)
      #  run: |
      #    if [ -f custom/Devtronic_CNC_Controller_map.h ]; then
      #      echo "Copying custom driver"
      #      cp custom/Devtronic_CNC_Controller_map.h <PATH/TO/DRIVER>/Devtronic_CNC_Controller_map.h
      #    else
      #      echo "No custom driver found, skipping copy"
      #    fi

      - name: Create build_logs dir
        run: mkdir -p build_logs

      - name: Build (PlatformIO) - selected env or all
        run: |
          set -e
          if [ "${{ github.event.inputs.env }}" != "" ]; then
            echo "Building only env: ${{ github.event.inputs.env }}"
            pio run -e "${{ github.event.inputs.env }}" -v 2>&1 | tee build_logs/build_${{ github.event.inputs.env }}.log
            exit ${PIPESTATUS[0]}
          else
            echo "No env specified: building all envs (may take long)"
            pio run -v 2>&1 | tee build_logs/build_all.log
            exit ${PIPESTATUS[0]}
          fi
        continue-on-error: true

      - name: Upload build log
        uses: actions/upload-artifact@v4
        with:
          name: grblhal-build-log
          path: build_logs/**

      - name: Upload all firmware artifacts (.bin/.elf)
        uses: actions/upload-artifact@v4
        with:
          name: grblhal-firmware
          path: |
            .pioenvs/**/*.bin
            .pioenvs/**/*.elf
            .pio/build/**

      - name: List .pioenvs for debugging
        if: always()
        run: |
          echo "=== Listing .pioenvs ==="
          ls -la .pioenvs || true
          echo "=== Listing .pio/build ==="
          ls -la .pio/build || true
